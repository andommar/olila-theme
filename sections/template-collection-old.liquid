<div class="px-4 py-8 md:container md:mx-auto bg-[#E5E5E5]">
    {% render 'breadcrumb' %}
    <div class=" md:px-10 grid grid-cols-1 md:grid-cols-10">
        <!-- Sidebar -->
        {%- assign collectionName = 'main-menu' -%}
        {%- assign collectionName2 = collection.title -%}
        {%- for link in linklists[collectionName].links -%}
            {%- for childlink in linklists[collectionName2].links -%}
                {{ childlink.title }}
            {%- endfor -%}
        {%- endfor -%}
        <div class="hidden md:block sidenav font-medium text-xs text-clr_navigation col-span-2">
            {%- for link in linklists.main-menu.links -%}
                <a href={{ link.url }} class="block
                {% if link.active  %}
                    font-bold
                    text-clr_primary
                {% endif %}">
                    {{link.title}}
                </a>
            {%- endfor -%}
            {%- comment -%} <a href="#" class="block">Collection</a>
            <a href="#" class="block">Collection</a>
            <a href="#" class="block">Collection</a>
            <a href="#" class="block">Collection</a> {%- endcomment -%}
        </div>
        <!-- Content -->
        {% paginate collection.products by section.settings.number_of_products_per_page %}
            <div class="content grid grid-cols-2 md:grid-cols-3 col-span-8 gap-6 gap-y-12"
                id="card-container"
                data-next-url="{{paginate.next.url}}">
                <!-- {% include 'breadcrumb' %} -->
                    {% for product in collection.products %}
                            {% render 'collection-product-card', param_item: product %}
                    {% else %}
                        <p>There are no products inside of this collection</p>
                    {% endfor %}
                <div class="col-span-full mx-auto">
                    {%- comment -%} {% if paginate.next %}
                        <button id="load-more"
                                onclick="loadMoreProducts()"
                                class="px-4 py-2 text-base font-medium shadow bg-clr_primary_variaton hover:bg-clr_primary text-white" >
                            Load more
                        </button>
                    {% endif %}
                    <span>Showing 
                        <span id="card-count"> 0 </span> of 
                        <span id="card-total">{{ collection.all_products_count }}</span> cards      
                    </span> {%- endcomment -%}
                    {% render 'pagination', pagination: paginate %}
                </div>
            </div>

        {% endpaginate %} 

        <div class="mx-auto w-full">

        </div>
    </div>
</div>

<script>
    const productsOnPage = document.getElementById('card-container')
    let next_url = productsOnPage.dataset.nextUrl;

    const load_more_btn = document.getElementById('load-more');


    async function getNextPage () {
        try{
            let res = await fetch(next_url)
            return await res.text()
        } catch (error) {
            console.log(error)
        }
    }

    async function loadMoreProducts(){
        let nextPage = await getNextPage();

        const parser = new DOMParser();
        const nextPageDoc = parser.parseFromString(nextPage, 'text/html');

        const productGrid = nextPageDoc.getElementById('card-container')
                console.log(productGrid)
        const newProducts = productGrid.getElementsByClassName('grid__item')
        const new_url = productGrid.dataset.nextUrl

        console.log(new_url)

        if (!new_url) {
            load_more_btn.style.display = 'none';
        }

        

        next_url = new_url;
        for (let i = 0; i < newProducts.length; i++) {
            productsOnPage.appendChild(newProducts[i]);
        }

        let totalProducts = document.querySelectorAll('.grid__item').length
        console.log(totalProducts)
        document.getElementById("card-count").innerHTML = totalProducts
    }
</script>

{% schema %}
    {
        "name": "Collection",
        "settings": [
            {
                "type": "number",
                "id": "number_of_products_per_page",
                "default": 6,
                "label": "Number of products per page"
            }
        ]
    }
{% endschema %}
